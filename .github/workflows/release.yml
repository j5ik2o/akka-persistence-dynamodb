name: Release
on:
  push:
    tags:
      - v[1-9]+.[0-9]+.[0-9]+
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        jdk: [ adopt@1.8, adopt@1.11, adopt@1.14 ]
        scala: [ 2.11.12, 2.12.13, 2.13.5 ]
    runs-on: ${{ matrix.os }}
    env:
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS:  -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      AWS_REGION: ap-northeast-1
      TEST_TIME_FACTOR: 3
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.jdk }}
      - uses: coursier/cache-action@v6
      - run: sbt -v ++${{ matrix.scala }} test
      - name: clean up
        run: "${GITHUB_WORKSPACE}/.github/clean-up.sh"
  release:
    runs-on: ubuntu-latest
    needs: test
    env:
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS:  -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
    - uses: olafurpg/setup-scala@v12
      with:
        java-version: "adopt@1.8"
    - uses: coursier/cache-action@v6
    - uses: olafurpg/setup-gpg@v3
    - run: sbt -v ci-release
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
    - name: clean up
      run: "${GITHUB_WORKSPACE}/.github/clean-up.sh"
