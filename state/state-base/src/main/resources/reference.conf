j5ik2o {

  dynamo-db-state {
    class = "com.github.j5ik2o.akka.persistence.dynamodb.state.DynamoDBDurableStateStoreProvider"
    plugin-dispatcher = "akka.actor.default-dispatcher"

    v1-async-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v1-async-client-factory-class-name}
    v1-sync-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v1-sync-client-factory-class-name}
    v1-dax-async-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v1-dax-async-client-factory-class-name}
    v1-dax-sync-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v1-dax-sync-client-factory-class-name}
    v2-async-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v2-async-client-factory-class-name}
    v2-sync-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v2-sync-client-factory-class-name}
    v2-dax-async-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v2-dax-async-client-factory-class-name}
    v2-dax-sync-client-factory-class-name = ${j5ik2o.dynamo-db-defaults.v2-dax-sync-client-factory-class-name}

    # column name defines
    columns-def {
      partition-key-column-name = "pkey"
      sort-key-column-name = "skey"
      persistence-id-column-name = "persistence-id"
      revision-nr-column-name = "revision-nr"
      deleted-column-name = "deleted"
      payload-column-name = "payload"
      serializer-id-column-name = "serializer-id"
      serializer-manifest-column-name = "serializer-manifest"
      ordering-column-name = "ordering"
      tags-column-name = "tags"
    }

    # the table name of state
    table-name = "State"

    # the separator for tags
    tag-separator = ","

    # consistent reads are possible, but at a higher cost.
    consistent-read = false

    # logical shard count
    shard-count = 64

    # specify the name of the provider class to generate the `PartitionKeyResolver`. Normally, you do not need to change this setting.
    partition-key-resolver-provider-class-name = "com.github.j5ik2o.akka.persistence.dynamodb.state.PartitionKeyResolverProvider$Default"

    # `partition-key-resolver-class-name` specifies the implementation class that generates `pkey` from `PersistenceId` and `Sequence Number`.
    partition-key-resolver-class-name = "com.github.j5ik2o.akka.persistence.dynamodb.state.PartitionKeyResolver$PersistenceIdBased"

    # specify the name of the provider class to generate the `TableNameResolver`. Normally, you do not need to change this setting.
    table-name-resolver-provider-class-name = "com.github.j5ik2o.akka.persistence.dynamodb.state.TableNameResolverProvider$Default"

    # `table-name-resolver-class-name` specifies the implementation class that generates the table name from `PersistenceId`.
    table-name-resolver-class-name = "com.github.j5ik2o.akka.persistence.dynamodb.state.TableNameResolver$Config"

    write-backoff = ${j5ik2o.dynamo-db-defaults.write-backoff}

    read-backoff = ${j5ik2o.dynamo-db-defaults.read-backoff}

    dynamo-db-client = ${j5ik2o.dynamo-db-defaults.dynamo-db-client}

    metrics-reporter-provider-class-name = ${j5ik2o.dynamo-db-defaults.metrics-reporter-provider-class-name}

    metrics-reporter-class-name = ${j5ik2o.dynamo-db-defaults.metrics-reporter-class-name}

    trace-reporter-provider-class-name = ${j5ik2o.dynamo-db-defaults.trace-reporter-provider-class-name}

    trace-reporter-class-name = ${j5ik2o.dynamo-db-defaults.trace-reporter-class-name}

  }

}
