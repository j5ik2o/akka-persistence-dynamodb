akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = debug
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }
}

akka.persistence.journal.plugin = "my-journal"

# My custom journal plugin
my-journal {
  # Class name of the plugin.
  class = "com.github.j5ik2o.akka.persistence.dynamodb.journal.DynamoDBJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.actor.default-dispatcher"
}

akka-persistence-dynamodb {

  dynamodb-client {
    access-key-id = "x"
    secret-access-key = "x"
    endpoint = "http://127.0.0.1:8000/"
  }

}